Vagrant.configure('2') do |config|
    config.vm.box = $box_image
    config.vm.box_check_update = true

    config.vm.boot_timeout = 900

    config.vm.provider :libvirt do |l|
        l.default_prefix = CLUSTER_NAME + '_'
        l.cpus = MASTER_CPUS
        l.memory = MASTER_MEMORY_SIZE_GB * 1024
        l.machine_virtual_size = DISK_SIZE_GB
    end

    # Hack around vagrant's inability to configure the vm before mounting shared folders, and attempt to install packages for nfs
    if DNS_SERVER != ''
        config.trigger.before :up do |trigger|
            trigger.info = "DNS hack"
            trigger.run = {inline: "bash -c 'sudo iptables -t nat -I PREROUTING 1 -p udp -m udp --dport 53 -j DNAT --to-destination #{DNS_SERVER}'"}
        end
        config.trigger.after :up do |trigger|
            trigger.info = "DNS hack cleanup"
            trigger.run = {inline: "bash -c 'sudo iptables -t nat -D PREROUTING 1'"}
        end
    end

    config.vm.define 'master' do |subconfig|
        subconfig.vm.hostname = 'master'
        subconfig.vm.network :private_network, ip: MASTER_IP
        subconfig.vm.synced_folder "../..", '/host-repo', type: 'nfs',
            create: true, readonly: true, linux__nfs_options: ['ro','no_subtree_check','all_squash','crossmnt']
        # Provision
        subconfig.vm.provision :shell, inline: $prepareScript
        subconfig.vm.provision :shell, inline: $baseInstallScript
        subconfig.vm.provision :shell, inline: $verifyNodeScript
        subconfig.vm.provision :shell, inline: $kubeMasterScript
        # Addons
        if K8S_DASHBOARD
            subconfig.vm.provision :shell, inline: $kubeDashScript
            subconfig.vm.network 'forwarded_port', guest: 8443, host: 2443
        end
    end
end
